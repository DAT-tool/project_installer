   
    upstream django {
        # ip_hash;
        server backend_app:8000;
    }
    upstream frontend {
        # ip_hash;
        # server frontend_app:80 weight=5 fail_timeout=0;
        server frontend_app fail_timeout=5;
    }

    {% if ssl_enabled %}
    server {
        add_header Access-Control-Allow-Origin *;
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
       
    }
    {% endif %}

     # main server
    server {
        # 1. Allow any origin
        add_header 'Access-Control-Allow-Origin' '*' always;
        # 2. Credentials can be cookies, authorization headers or TLS client certificates
        add_header 'Access-Control-Allow-Credentials' 'true';
        # 3. What methods should be allowed when accessing the resource in response to a preflight request
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS';
        # 4. Access-Control-Allow-Headers response header is used in response to a preflight request to indicate which HTTP headers can be used during the actual request.
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        {% if ssl_enabled %}
        listen  443 ssl;
        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/cert.key;
        {% else %}
        listen      80;
        {% endif %}
        server_name {{domain_name}} www.{{domain_name}};
       
        # Allow large cookies
        proxy_buffer_size 8k;
        client_max_body_size 6M;

        location /static {
            alias /static;
        }

        location /media {
        client_max_body_size 6M;
            alias /media;
        }

        location @proxy_to_backend_app {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_pass http://django;
        }
        
        location / {
            # uwsgi_pass  django;
            try_files $uri @proxy_to_backend_app;
            include     /etc/nginx/uwsgi_params;
        }
        
    }
    # app server
    server {
        {% if ssl_enabled %}
        listen  443 ssl;
        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/cert.key;
        {% else %}
        listen      80;
        {% endif %}
        server_name app.{{domain_name}} www.app.{{domain_name}};
        #  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;
        
        # allow cors origin
        add_header Access-Control-Allow-Origin *;

        # Allow large cookies
        proxy_buffer_size 8k;

        location @proxy_to_frontend_app {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_pass http://frontend;
        }

        location / {
            try_files $uri @proxy_to_frontend_app;
        }
    }

##
# Logging Settings
##

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

##
# Gzip Settings
##

gzip on;


server_tokens off;

    {% for dom in sub_domains %}
    upstream {{dom.name}} {
        # ip_hash;
        server {{dom.name}}_app:{{dom.port}} fail_timeout=5;
    }
    {% endfor %}

    {% if ssl_enabled %}
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri; 
    }
    {% endif %}

#servers
{% for sub in sub_domains %}
    server {
        # 1. Allow any origin
        add_header 'Access-Control-Allow-Origin' '*' always;
        # 2. Credentials can be cookies, authorization headers or TLS client certificates
        add_header 'Access-Control-Allow-Credentials' 'true';
        # 3. What methods should be allowed when accessing the resource in response to a preflight request
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS';
        # 4. Access-Control-Allow-Headers response header is used in response to a preflight request to indicate which HTTP headers can be used during the actual request.
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        {% if ssl_enabled %}
        listen  443 ssl;
        {% if sub.subdomain.length == 0 %}
        ssl_certificate /etc/nginx/certs/root/cert.crt;
        ssl_certificate_key /etc/nginx/certs/root/cert.key;
        {% else %}
        ssl_certificate /etc/nginx/certs/wildcard/cert.crt;
        ssl_certificate_key /etc/nginx/certs/wildcard/cert.key;
        {% endif %}
        {% else %}
        listen      80;
        {% endif %}
        server_name {{ sub.subdomain + '.' if sub.subdomain.length > 0 else ''}}{{domain_name}} www.{{ sub.subdomain + '.' if sub.subdomain.length > 0 else ''}}{{domain_name}};
       
        # Allow large cookies
        proxy_buffer_size 8k;
        client_max_body_size 5G;

        location /static {
            alias /static;
        }

        location /media {
        # client_max_body_size 6M;
            alias /media;
        }

        location @proxy_to_{{sub.name}}_app {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_pass http://{{sub.name}};
            proxy_hide_header access-control-allow-credentials;
            proxy_hide_header access-control-allow-origin;
        }
        
        location / {
            # uwsgi_pass  django;
            try_files $uri @proxy_to_{{sub.name}}_app;
            include     /etc/nginx/uwsgi_params;
        }
        
    }
    {% endfor %}


##
# Logging Settings
##

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

##
# Gzip Settings
##

gzip on;


server_tokens off;
